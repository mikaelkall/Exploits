package com.datadog.sample.jwtnullsignature;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class MainController {

    static String BEARER_PREFIX = "Bearer ";

    @Autowired
    AuthorizationService authorizationService;

    @GetMapping("/")
    public ResponseEntity<String> index(@RequestHeader(value = "authorization", required = false) String authorizationHeader) {
        if (authorizationHeader == null || authorizationHeader.isEmpty()) {
            return new ResponseEntity<>("You are not authorized to access this endpoint", HttpStatus.UNAUTHORIZED);
        }

        // We expect a header of the form "Authorization: Bearer <JWT>"
        if (!authorizationHeader.startsWith(BEARER_PREFIX)) {
            return new ResponseEntity<>("Bad request", HttpStatus.BAD_REQUEST);
        }

        String jwt = authorizationHeader.substring(BEARER_PREFIX.length()).trim();
        try {
            String subject = authorizationService.getSubject(jwt);
            return new ResponseEntity<>("Hello, " + subject + "!", HttpStatus.OK);
        } catch (UnauthorizedException exception) {
            return new ResponseEntity<>("Invalid JWT", HttpStatus.UNAUTHORIZED);
        }
    }
}