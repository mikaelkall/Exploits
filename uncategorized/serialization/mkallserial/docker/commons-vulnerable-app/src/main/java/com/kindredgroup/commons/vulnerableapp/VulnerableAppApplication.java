package com.kindredgroup.commons.vulnerableapp;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;

import com.kindredgroup.commons.vulnerableapp.Desert;

public class VulnerableAppApplication {

    private ServerSocket server;
     
    public VulnerableAppApplication(String ipAddress, int port) throws Exception {
        if (ipAddress != null && !ipAddress.isEmpty())
            this.server = new ServerSocket(port, 1, InetAddress.getByName(ipAddress));
        else
            this.server = new ServerSocket(port, 1, InetAddress.getLocalHost());
    }

    private  void listen() throws Exception {
        
		while(true) 
		{
		    String data = null;
		    Socket client = this.server.accept();
            String clientAddress = client.getInetAddress().getHostAddress();
            System.out.println("\r\nNew connection from " + clientAddress);

			try 
			{
                Desert.Deserialize(client.getInputStream());
			} catch (Exception ex) {
				System.out.println(ex.getMessage());
			}
			finally
			{
				client.close();
			}
        }
	}

    public InetAddress getSocketAddress() {
        return this.server.getInetAddress();
    }
	
	public static void main(String[] args) throws Exception {

        if (args.length > 0)
        {
            Desert.Serialize();
        } else {

		    VulnerableAppApplication app = new VulnerableAppApplication("0.0.0.0", 8000);
        
		    System.out.println("\r\nRunning Server: " +
                "Host=" + app.getSocketAddress().getHostAddress() + " Port=8000");

            app.listen();
        }
	}
}
